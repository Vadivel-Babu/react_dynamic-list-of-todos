{"version":3,"sources":["api.ts","types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","TodoList","todos","showTodo","selectedTodo","isTodoSelected","id","className","map","todo","cn","completed","title","type","onClick","TodoFilter","query","onQueryChange","filterBy","setFilterBy","value","onChange","target","ALL","ACTIVE","COMPLETED","event","placeholder","length","style","pointerEvents","Loader","TodoModal","closeTodo","useState","user","setUser","fetchData","a","userId","currentUser","Error","console","warn","message","useEffect","href","email","name","App","setTodos","setSelectedTodo","setQuery","isLoadingError","setIsLoadingError","isDataLoading","setIsDataLoading","visibleTodos","preparedTodo","preparedQuery","toLowerCase","trim","filter","includes","filteredTodos","data","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7770fcb.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  showTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  showTodo,\n  selectedTodo,\n}) => {\n  const isTodoSelected = (id: number) => selectedTodo?.id === id;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': isTodoSelected(todo.id),\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {isTodoSelected(todo.id) ? (\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => showTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  query: string;\n  onQueryChange: (query: string) => void;\n  filterBy: FilterBy;\n  setFilterBy: (filterBy: FilterBy) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  filterBy,\n  setFilterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={({ target }) => {\n            setFilterBy(target.value as FilterBy);\n          }}\n        >\n          <option value={FilterBy.ALL}>{FilterBy.ALL}</option>\n          <option value={FilterBy.ACTIVE}>{FilterBy.ACTIVE}</option>\n          <option value={FilterBy.COMPLETED}>{FilterBy.COMPLETED}</option>\n        </select>\n      </span>\n    </p>\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        value={query}\n        onChange={(event) => {\n          onQueryChange(event.target.value);\n        }}\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onQueryChange('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  closeTodo: () => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, closeTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const fetchData = async () => {\n    try {\n      const currentUser = await getUser(selectedTodo?.userId || 0);\n\n      setUser(currentUser);\n    } catch (error) {\n      if (error instanceof Error) {\n        // eslint-disable-next-line no-console\n        console.warn(error.message);\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unexpected error');\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { FilterBy } from './types/FilterBy';\nimport { TodoModal } from './components/TodoModal';\n\nconst filteredTodos = (todos: Todo[], query: string, filterBy: FilterBy) => {\n  let preparedTodo = [...todos];\n\n  if (query) {\n    const preparedQuery = query.toLowerCase().trim();\n\n    preparedTodo = preparedTodo.filter((todo) => todo.title.toLowerCase().includes(preparedQuery));\n  }\n\n  switch (filterBy) {\n    case FilterBy.ACTIVE:\n      preparedTodo = preparedTodo.filter((todo) => !todo.completed);\n      break;\n\n    case FilterBy.COMPLETED:\n      preparedTodo = preparedTodo.filter((todo) => todo.completed);\n      break;\n\n    case FilterBy.ALL:\n    default:\n      break;\n  }\n\n  return preparedTodo;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.ALL);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n  const [isDataLoading, setIsDataLoading] = useState(true);\n\n  const visibleTodos = filteredTodos(todos, query, filterBy);\n\n  const fetchData = async () => {\n    try {\n      const data = await getTodos();\n\n      setTodos(data);\n      setIsDataLoading(false);\n      setIsLoadingError(false);\n    } catch (error) {\n      setIsLoadingError(true);\n      setIsDataLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const showTodo = useCallback(\n    (todo: Todo) => {\n      setSelectedTodo(todo);\n    },\n    [selectedTodo],\n  );\n\n  const closeTodo = useCallback(() => {\n    setSelectedTodo(null);\n  }, [selectedTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isDataLoading && <Loader />}\n              {isLoadingError ? (\n                <p>Error, server is unavailable</p>\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  showTodo={showTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal closeTodo={closeTodo} selectedTodo={selectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}